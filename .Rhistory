resSig.selected <- resSig.selected[order(resSig.selected$log2FoldChange),]
annoCol<-list(Day=c(d2="#E7D2E1", d3="#7E668C", d4="#8A0089", d5="#330055"),
Condition=c(Control="#C5C5C8",Infected="#6A004A"))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
# define the colours
annoCol<-list(Day=c(d2="#E7D2E1", d3="#7E668C", d4="#8A0089", d5="#330055"),
Condition=c(Control="#C5C5C8",Infected="#6A004A"))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
#Variance stabilizing transformation
vsd <- vst(dds, blind = FALSE)
topVarGeneNumbers <- head(order(rowVars(assay(vsd)), decreasing = TRUE), 50)
topVarGenes <-rowVars(assay(vsd))[topVarGeneNumbers]
#Normalise with respect to mean:
mat  <- assay(vsd)[ topVarGeneNumbers, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(vsd)[, c("sample_type","gender")])
#Sort genes by expression fold change:
resSig.selected <- resSig[topVarGenes,]
resSig.selected <- resSig.selected[order(resSig.selected$log2FoldChange),]
# define the colours
annoCol<-list(Day=c(d2="#E7D2E1", d3="#7E668C", d4="#8A0089", d5="#330055"),
Condition=c(Control="#C5C5C8",Infected="#6A004A"))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
# Convert significant DEGs to box plot format
res_df <- as.data.table(res05[res05$padj < 0.05 & !is.na(res05$padj), ])
# Add a new column for direction
res_df[, deg_direction := ifelse(log2FoldChange > 0, "Up", "Down")]
# Create box plot of effect sizes
ggplot(res_df, aes(x = deg_direction, y = log2FoldChange, fill = deg_direction)) +
geom_boxplot(width = 0.5, outlier.shape = NA) +  # Hide outliers
geom_jitter(width = 0.15, alpha = 0.1, size = 1.5, color = "orange") +  # Add individual points
geom_hline(yintercept = 0, linetype = "dashed", color = "grey40") +
stat_summary(
fun = median,
geom = "point",
shape = 18,
size = 4,
color = "red"
) +  # Highlight medians
labs(
x = "DEG Direction",
y = "Log2 Fold Change",
title = "Distribution of DEG Effect Sizes",
fill = "Direction"
) +
scale_fill_viridis(discrete = TRUE, begin = 0.3, end = 0.7) +
theme_cowplot() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text = element_text(size = 12)
)
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Convert significant DEGs to box plot format
res_df <- as.data.table(res05[res05$padj < 0.05 & !is.na(res05$padj), ])
# Add a new column for direction
res_df[, deg_direction := ifelse(log2FoldChange > 0, "Up", "Down")]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
res_df[log2FoldChange < -1, sig := "FDR<0.05 & logFC<-1"]
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$gene <- rownames(res_df)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[padj < 0.05 & !is.na(padj)]
sum(res05$padj < 0.05, na.rm=TRUE)
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Convert significant DEGs to box plot format
res_df <- as.data.table(res05[res05$padj < 0.05 & !is.na(res05$padj), ])
# Add a new column for direction
res_df[, deg_direction := ifelse(log2FoldChange > 0, "Up", "Down")]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
res_df[log2FoldChange < -1, sig := "FDR<0.05 & logFC<-1"]
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
# Create a data.frame from the results
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
# Add a new column for direction
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"  # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Subset to create res_df with significant DEGs
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
# Add a new column for direction
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"  # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE",  # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(res_df$padj)][1:10]
# Subset to create res_df with significant DEGs
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
# Remove NA values from padj before ordering
res_df <- res_df[!is.na(res_df$padj), ]
# Add a new column for direction
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"  # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE",  # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label, ensuring we don't go out of bounds
top_genes <- res_df[order(res_df$padj)][1:min(10, nrow(res_df))]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Convert significant DEGs to box plot format
res_df <- as.data.table(res05[res05$padj < 0.05 & !is.na(res05$padj), ])
# Add a new column for direction
res_df[, deg_direction := ifelse(log2FoldChange > 0, "Up", "Down")]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
res_df[log2FoldChange < -1, sig := "FDR<0.05 & logFC<-1"]
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- as.data.table(res05[res05$padj < 0.05 & !is.na(res05$padj), ])
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
res_df[log2FoldChange < -1, sig := "FDR<0.05 & logFC<-1"]
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
res_df
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df <- res_df[!is.na(res_df$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05$padj < 0.05 & !is.na(res05$padj)
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[log2FoldChange > 1, sig := "FDR<0.05 & |logFC| ≤ 1"]  # Default for significant but small effect
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
res_df
str(res_df)
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"   # Default for significant but small effect
res_df[log2FoldChange > 1, sig := "FDR<0.05 & logFC>1"]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"   # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(padj)][1:10]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"   # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(res_df$padj)][1:min(10, nrow(res_df))]
res_df
colnames(res_df)
print(res_df)
top_genes <- res_df[order(res_df$padj), ][1:10, ]
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"   # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(res_df$padj), ][1:10, ]
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
res_df
# Add significance tiers based on log2FC thresholds (even though res_df is already filtered by padj < 0.05)
res_df <- res05[res05$padj < 0.05 & !is.na(res05$padj), ]
res_df$sig <- "FDR<0.05 & |logFC| ≤ 1"   # Default for significant but small effect
res_df$sig[res_df$log2FoldChange > 1] <- "FDR<0.05 & logFC>1"
res_df$sig[res_df$log2FoldChange < -1] <- "FDR<0.05 & logFC<-1"
res_df$gene <- rownames(res_df)
# Define colors for the categories
color_values <- c(
"FDR<0.05 & logFC>1" = "#BC2C1A",  # Red for high upregulated
"FDR<0.05 & logFC<-1" = "#7FB7BE", # Blue for high downregulated
"FDR<0.05 & |logFC| ≤ 1" = "grey50"  # Grey for significant but small effect
)
# Identify top 10 genes (lowest padj) to label
top_genes <- res_df[order(res_df$padj), ][1:10, ]
# Generate volcano plot
volcano_plot <- ggplot(res_df, aes(x = log2FoldChange, y = -log10(padj))) +
geom_point(aes(color = sig), alpha = 0.7, size = 2) +
scale_color_manual(values = color_values) +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey40") +
labs(
x = "Log2 Fold Change",
y = "-log10(Adjusted p-value)",
color = "Significance",
title = "Volcano Plot of Significant DEGs (FDR < 0.05)"  # Add title here
) +
theme_cowplot() +
ggrepel::geom_text_repel(
data = top_genes,
aes(label = gene),
size = 3,
max.overlaps = 20,
box.padding = 0.5
) +
theme(
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold", size = 14)  # Center and style title
)
print(volcano_plot)
#Variance stabilizing transformation
vsd <- vst(dds, blind = FALSE)
topVarGeneNumbers <- head(order(rowVars(assay(vsd)), decreasing = TRUE), 50)
topVarGenes <-rowVars(assay(vsd))[topVarGeneNumbers]
#Normalise with respect to mean:
mat  <- assay(vsd)[ topVarGeneNumbers, ]
mat  <- mat - rowMeans(mat)
anno <- as.data.frame(colData(vsd)[, c("sample_type","gender")])
#Sort genes by expression fold change:
resSig.selected <- resSig[topVarGenes,]
resSig.selected <- resSig.selected[order(resSig.selected$log2FoldChange),]
#Variance stabilizing transformation
vsd <- vst(dds, blind = FALSE)
# Ensure resSig is defined before this point
topVarGeneNumbers <- head(order(rowVars(assay(vsd)), decreasing = TRUE), 50)
topVarGenes <- rowVars(assay(vsd))[topVarGeneNumbers]
# Normalize with respect to mean
mat <- assay(vsd)[topVarGeneNumbers, ]
mat <- mat - rowMeans(mat)
anno <- as.data.frame(colData(vsd)[, c("sample_type", "gender")])
# Sort genes by expression fold change
resSig.selected <- resSig[topVarGenes, ]
resSig.selected <- resSig.selected[order(resSig.selected$log2FoldChange), ]
# define the colours
annoCol<-list(Day=c(d2="#E7D2E1", d3="#7E668C", d4="#8A0089", d5="#330055"),
Condition=c(Control="#C5C5C8",Infected="#6A004A"))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
#Variance stabilizing transformation
vsd <- vst(dds, blind = FALSE)
# Ensure resSig is defined before this point
topVarGeneNumbers <- head(order(rowVars(assay(vsd)), decreasing = TRUE), 50)
topVarGenes <- rowVars(assay(vsd))[topVarGeneNumbers]
# Normalize with respect to mean
mat <- assay(vsd)[topVarGeneNumbers, ]
mat <- mat - rowMeans(mat)
anno <- as.data.frame(colData(vsd)[, c("sample_type", "gender")])
# Sort genes by expression fold change
resSig <- results(dds, alpha=0.05)  # Create resSig with significant results
resSig.selected <- resSig[topVarGenes, ]
resSig.selected <- resSig.selected[order(resSig.selected$log2FoldChange), ]
# define the colours
annoCol<-list(Day=c(d2="#E7D2E1", d3="#7E668C", d4="#8A0089", d5="#330055"),
Condition=c(Control="#C5C5C8",Infected="#6A004A"))
pheatmap(mat, cluster_rows = FALSE,
annotation_col = anno,
annotation_colors = annoCol,
color = colorRampPalette(c("#17255A","white","#BD1E1E"))(100))
