sprintf("%05.1f", pi)
sprintf("%+f", pi)
sprintf("% f", pi)
sprintf("%-10f", pi)
sprintf("%e", pi)
sprintf("%E", pi)
sprintf("%g", pi)
sprintf("ID: %04d", 42)
sprintf("ID: %04d", 42.23)
sprintf("ID: %d", 42.23)
sprintf("ID: %d", 42)
sprintf("ID: %0f", 42.1)
sprintf("ID: %0.0f", 42.1)
sprintf("ID: %0.2f", 42.1)
sprintf("ID: %0.23f", 42.1)
sprintf("ID: %0.10f", 42.1)
sprintf("%03d", seq(0,100,5))
sprintf("pi as %g", pi)
sprintf("pi as %g", 1e-6*pi)
str(y)
str(sampleIDs)
mat <- matrix(1:9, nrow=3)
mat
?apply
apply(array, margin, ...)
apply(mat, 1, mean)
apply(mat, 2, mean)
apply(mat, 3, mean)
apply(mat, c(1,2), mean)
apply(mat, c(1,2), sum)
apply(mat, c(1,2), sd)
mat
apply(mat, c(1,2), max)
apply(mat, c(1,2), min)
apply(mat, c(1,2), sqrt)
seq(1,3.3,0.5)
rep(0,3)
rep(c(1,2,3),3)
rep(c(1,2,3),each=3)
unique(c(1,2,3,1,2,2,4,5))
combn(1:5, 2)
x <- 1:10
stopifnot(x <= 10)
stopifnot(x => 10)
stopifnot(x >= 10)
all(x <= 5)
stopifnot(x <= 5)
for(i in 1:10){
if(i < 5){
print(sprintf("%s < 5", i))
} else if(i < 8) {
print(sprintf("%s >= 5 & %s < 8", i, i))
} else {
print(sprintf("%s >= 8", i))
}
}
here::here()
here::here("package_test.R")
here::here("package_test.R", "package_build.R")
here::here("getting_started.Rmd")
rm(d_x)
zhou_path <- file.path(main_path, "Zhou_Astro.qs")
SCE_zhou <- qs::qread(zhou_path)
SCE_tsai <- qs::qread(tsai_path)
### Test: DGE Analysis
DEG_zhou <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex,
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "M")
### Test: DGE Analysis
DEG_zhou <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "M")
### Test: DGE Analysis
DEG_zhou <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "AD")
### Test: DGE Analysis
DEG_zhou <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
y = "pathological_diagnosis",
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "AD")
### Test: DGE Analysis
DEG_zhou <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
y = "pathological_diagnosis",
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "AD")
?DGE_analysis
#Rebuild the package and check:
devtools::document()
#Rebuild the vignettes
devtools::build_vignettes()
getwd()
setwd("~/Desktop/PowerAnalysis/test_bulk")
getwd()
length(list.dirs(getwd(), full.names = FALSE, recursive = FALSE))
length(list.dirs(getwd(), full.names = FALSE, recursive = FALSE))
setwd("~/Desktop/PowerAnalysis/Power_Analysis_package")
?power_analysis
#Install the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
?power_analysis
?DGE_analysis
#Rebuild the package and check:
devtools::document()
?power_analysis
#Rebuild the package and check:
devtools::document()
?power_analysis
?DGE_analysis
#Rebuild the package and check:
devtools::document()
?bulk_analysis
?bulk_power_analysis
#Rebuild the package and check:
devtools::document()
?bulk_power_analysis
?power_analysis
?DGE_analysis
#Rebuild the package and check:
devtools::document()
?power_analysis
help(package = 'poweranalysis')
#Install the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
help(package = 'poweranalysis')
library(poweranalysis)
help(package = 'poweranalysis')
?power_analysis
#Rebuild the package and check:
devtools::document()
#Install the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
?power_analysis
?DGE_analysis
?bulk_analysis
?bulk_power_analysis
#Load the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
#Add vignettes
usethis::use_vignette("correlation_analysis")
?correlation analysis
?correlation_analysis
#Rebuild the package and check:
devtools::document()
#Rebuild the vignettes
devtools::build_vignettes()
### Test: DGE Analysis
DEG_tsai <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
y = "pathological_diagnosis",
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "AD")
setwd("~/Desktop/PowerAnalysis")
setwd("~/Desktop/PowerAnalysis")
### Test: DGE Analysis
DEG_tsai <- poweranalysis::DGE_analysis(SCE_tsai,
design = ~ sex + pathological_diagnosis,
y = "pathological_diagnosis",
celltypeID="cluster_celltype",
sampleID = "sample_id",
coef = "AD")
View(DEG_tsai)
DEG_tsai[["celltype_all_genes"]][["Micro"]][["logFC"]]
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
# List of SCE datasets
SCEs <- list(tsai_micro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai_Micro")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype")
sampleIDs <- c("sample_id")
getwd()
output_corr <- file.path(getwd(), "corr_analysis")
if (!dir.exists(output_corr)) {
dir.create(output_corr, recursive = TRUE)
}
correlation_analysis(
main_dataset =  tsai_micro    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
correlation_analysis(
main_dataset =  tsai_micro,
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
pvals <- c(0.05,0.01,0.001)
correlation_analysis(
main_dataset = tsai_micro,    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3
output_path = output_corr
c
correlation_analysis(
main_dataset = tsai_micro,    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
setwd("~/Desktop/PowerAnalysis/Power_Analysis_package")
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
zhou_path <- system.file("extdata", "Zhou_Astro_subset.qs", package="poweranalysis")
zhou_astro <- qs::qread(zhou_path)
# List of SCE datasets
SCEs <- list(tsai_micro, zhou_astro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai_Micro", "Zhou_Astro")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro", NA),
Astro=c(NA,"Astro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype","cluster_celltype")
sampleIDs <- c("sample_id","sample_id")
correlation_analysis(
main_dataset = tsai_micro,    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
celltype_corr <- list(Micro=c("Micro", "Micro"),
Astro=c("Astro","Astro"))
correlation_analysis(
main_dataset = tsai_micro,    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
correlation_analysis(
main_dataset = "tsai_micro",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
library(poweranalysis)
library(SingleCellExperiment)
# Load SCE objects (replace with actual file paths or data)
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
# List of SCE datasets
SCEs <- list(tsai_micro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai_Micro")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype")
sampleIDs <- c("sample_id")
# list of P-value thresholds
pvals <- c(0.05,0.01,0.001)
# Output path (must be a clean directory with no files or subdirectories)
output_corr <- file.path(getwd(), "corr_analysis")
if (!dir.exists(output_corr)) {
dir.create(output_corr, recursive = TRUE)
}
# Run correlation analysis between single-cell datasets
correlation_analysis(
main_dataset = "Tsai_Micro",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
## Test: correlation analysis
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
zhou_path <- system.file("extdata", "Zhou_Micro.qs", package="poweranalysis")
zhou_astro <- qs::qread(zhou_path)
## Test: correlation analysis
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
zhou_path <- system.file("extdata", "Zhou_Micro.qs", package="poweranalysis")
zhou_micro <- qs::qread(zhou_path)
# List of SCE datasets
SCEs <- list(tsai_micro, zhou_astro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai", "Zhou")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro", "Micro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype","cluster_celltype")
sampleIDs <- c("sample_id","sample_id")
# Output path
output_corr = path.expand("~/Desktop/PowerAnalysis/test_corr")
correlation_analysis(
main_dataset = "Tsai",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
bulk_downsampling_DGEanalysis(SCEs,
dataset_names,
celltype_corr,
sampled="individuals",
celltypeIDs=celltypeIDs,
sampleIDs=sampleIDs,
output_path,
Nperms=3)
output_path = path.expand("~/Desktop/PowerAnalysis/test_bulk")
bulk_downsampling_DGEanalysis(SCEs,
dataset_names,
celltype_corr,
sampled="individuals",
celltypeIDs=celltypeIDs,
sampleIDs=sampleIDs,
output_path,
Nperms=3)
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
zhou_path <- system.file("extdata", "Zhou_Micro.qs", package="poweranalysis")
zhou_micro <- qs::qread(zhou_path)
# List of SCE datasets
SCEs <- list(tsai_micro, zhou_astro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai", "Zhou")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro", "Micro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype","cluster_celltype")
sampleIDs <- c("sample_id","sample_id")
# Output path
output_corr = path.expand("~/Desktop/PowerAnalysis/test_corr")
correlation_analysis(
main_dataset = "Tsai",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
#Load the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
correlation_analysis(
main_dataset = "Tsai",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
c
correlation_analysis(
main_dataset = "Tsai",    # Name of the dataset used to select significant DEGs from
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
pvals = pvals,
N_randperms = 3,
N_subsets = 3,
output_path = output_corr
)
tsai_path <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
tsai_micro <- qs::qread(tsai_path)
zhou_path <- system.file("extdata", "Zhou_Astro_subset.qs", package="poweranalysis")
zhou_astro <- qs::qread(zhou_path)
# List of SCE datasets
SCEs <- list(tsai_micro, zhou_astro)
# Dataset names (used in plots and output files)
dataset_names <- c("Tsai_Micro", "Zhou_Astro")
# Cell type mapping
celltype_corr <- list(Micro=c("Micro", NA),
Astro=c(NA,"Astro"))
# Metadata column names per SCE
celltypeIDs <- c("cluster_celltype","cluster_celltype")
sampleIDs <- c("sample_id","sample_id")
# Output path (must be a clean directory with no files or subdirectories)
output_sample <- file.path(getwd(), "bulk_sample")
if (!dir.exists(output_sample)) {
dir.create(output_sample, recursive = TRUE)
}
# Load GTEx bulk DEGs
bulk_path <- system.file("extdata", "LFSR.tsv", package="poweranalysis")
bulkDE <- read.table(bulk_path, sep = "\t", header = TRUE)
# Run bulk power analysis for down-sampling individuals
bulk_power_analysis(
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
bulkDE = bulkDE,
sampled = "individuals",
output_path = output_sample,
Nperms = 3 # Nperms=3 for speed in example
)
q
bulk_power_analysis(
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
bulkDE = bulkDE,
sampled = "individuals",
output_path = output_path,
Nperms = 3 # Nperms=3 for speed in example
)
#Load the package
load_all("/Users/caominjie/Desktop/PowerAnalysis/Power_Analysis_package") #simulate library() without installing the package
bulk_power_analysis(
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
bulkDE = bulkDE,
sampled = "individuals",
output_path = output_path,
Nperms = 3 # Nperms=3 for speed in example
)
bulk_power_analysis(
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
bulkDE = bulkDE,
sampled = "individuals",
output_path = output_path,
Nperms = 3 # Nperms=3 for speed in example
)
bulk_power_analysis(
SCEs = SCEs,
dataset_names = dataset_names,
celltype_corr = celltype_corr,
celltypeIDs = celltypeIDs,
sampleIDs = sampleIDs,
bulkDE = bulkDE,
sampled = "individuals",
output_path = output_path,
Nperms = 3 # Nperms=3 for speed in example
)
#Rebuild the vignettes
devtools::build_vignettes()
setwd("~/Desktop/PowerAnalysis/Power_Analysis_package")
#Rebuild the vignettes
devtools::build_vignettes()
#Rebuild the vignettes
devtools::build_vignettes()
#Rebuild the vignettes
devtools::build_vignettes()
#Rebuild the vignettes
devtools::build_vignettes()
