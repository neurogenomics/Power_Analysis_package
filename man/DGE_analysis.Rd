% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DGE_analysis.R
\name{DGE_analysis}
\alias{DGE_analysis}
\title{Perform differential expression analysis using a pseudobulk approach on single-cell data}
\usage{
DGE_analysis(
  SCE,
  design,
  sampleID,
  celltypeID,
  y = NULL,
  region = "single_region",
  coef = NULL,
  control = NULL,
  pval_adjust_method = "BH",
  adj_pval = 0.05,
  output_path = "sc.cell.type.de.graphs/",
  rmv_zero_count_genes = T,
  verbose = F,
  save = F
)
}
\arguments{
\item{SCE}{A \code{SingleCellExperiment} object containing the input scRNA-seq data. You may also provide a path to an \code{.R}, \code{.rds}, or \code{.qs} file. If using a file, ensure the \code{SCE} object inside is named \code{SCE}.}

\item{design}{A model formula specifying covariates for differential expression analysis. It should be of class \code{formula} (e.g., \code{~ sex + pmi + disease}). This formula is used to fit a generalized linear model.}

\item{sampleID}{Name of the column in the \code{SCE} metadata that identifies biological replicates (e.g., patient ID). This column is used for grouping in the pseudobulk approach.}

\item{celltypeID}{Name of the column in the \code{SCE} metadata indicating cell type labels. This is used to identify celltype specific DEGs. If there is only one cell type in the analysis, the analysis will automatically adjust.}

\item{y}{Name of the column in the \code{SCE} metadata representing the response variable (e.g., "diagnosis" - case or disease). If not specified, defaults to the last variable in the \code{design} formula. Accepts both categorical (logistic regression) and continuous (linear regression) variables.}

\item{region}{Optional column in \code{SCE} metadata indicating the tissue or brain region. If present, differential expression is performed within each region separately. Defaults to "single_region" (i.e., no regional split).}

\item{coef}{Character string indicating the level of the response variable (\code{y}) to test for in differential expression. For case-control studies, this would typically be "case" (e.g. "AD"). Typically used in binary comparisons, leave as default value for two groups or continuous y. Default is NULL.}

\item{control}{Optional. Character string specifying the control level in the response variable (\code{y}) to compare against. Only required if \code{y} contains more than two levels. Ignored for binary or continuous outcomes.}

\item{pval_adjust_method}{Method used to adjust p-values for multiple testing. Default is "BH" (Benjamini–Hochberg). See \code{stats::p.adjust} for available options.}

\item{adj_pval}{Adjusted p-value threshold (0–1) used to define significance in the differential expression results. Default is 0.05.}

\item{output_path}{Directory where output plots from the DE analysis will be saved. If set to \code{FALSE}, no plots will be generated. Defaults to a folder named "sc.cell.type.de.graphs" in the working directory.}

\item{rmv_zero_count_genes}{Logical. Whether to remove genes with zero counts across all cells. Default is \code{TRUE}.}

\item{verbose}{Logical. Whether to print progress and additional messages during the differential analysis analysis. Default is \code{FALSE}.}

\item{save}{Whether to save DE analysis results as an \code{.RData} file. Default is \code{FALSE}. Note: power analysis and downsampling functions handle saving separately.}
}
\value{
A list containing:
celltype_DEGs: list with the differentially expressed genes (DEGs) for each cell type
celltype_all_genes: list with all genes along with their differential expression scores for each cell type
celltype_counts: vector with the counts of cells after QC in each cell type
}
\description{
Conducts differential gene expression (DGE) analysis across cell types by aggregating single-cell RNA-seq data at the sample level (pseudobulk). This approach accounts for biological replicates and covariates, enabling robust identification of cell type–specific DEGs using generalized linear models. Returns a list of differential expression results for each cell type.
}
\examples{
\dontrun{
# To use the function input the formula of the comparison you want to make along with the names
# of the pseudobulk ID and celltype ID
# If you want to compare disease and control across cell types, taking into account sex use:
#  formula = ~ sex + disease. Firstly load  your SCE object (can otherwise specify location)
library(qs)
library(SingleCellExperiment)
SCE <- qs::qread("sce.qs")
DGE_analysis.return_incl_sex<- DGE_analysis(SCE_small,
design= ~ sex + pathological_diagnosis_original,
sampleID="sample_id", celltypeID="allan_celltype",coef="AD")
# If you only want to also account for other variables as well as sex, such as
# postmortem interval (PMI):
DGE_analysis.return_sex_pmi<- DGE_analysis(SCE_small,
design= ~ sex + PMI + pathological_diagnosis_original,
sampleID="sample_id", celltypeID="allan_celltype",coef="AD")
# If you only want to compare disease and control across cell types w/o any other constraints:
DGE_analysis.return<- DGE_analysis(SCE_small,design= ~ pathological_diagnosis_original,
sampleID="sample_id", celltypeID="allan_celltype",coef="AD")
# A good way to validate the DEG analysis approach is to run a sex comparison
# You would expect genes on the sex chromosomes to be DEGs, this can be done:
DGE_analysis.sex.return<- DGE_analysis(SCE,design= ~ sex,
sampleID="sample_id", celltypeID="allan_celltype",coef="M")
#get gene names of chromosomal DEGs
library('biomaRt')
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
genes <- unique(as.character(our_degs$name))
gene_IDs <- getBM(filters= "ensembl_gene_id",
                  attributes= c("ensembl_gene_id","chromosome_name","hgnc_symbol"),
                  values = genes, mart= mart,useCache = FALSE)
gene_IDs <- as.data.table(gene_IDs)
setnames(gene_IDs,"ensembl_gene_id","name")
DEGs <- data.table::rbindlist(sc.cell.type.de.return$celltype_DEGs,idcol="celltype")
setkey(DEGs,name)
#append gene names
DEGs[, gene_name := gene_IDs[DEGs, on=.(name), x.hgnc_symbol]]
DEGs[, chromosome_name := gene_IDs[DEGs, on=.(name), x.chromosome_name]]
#Xist should be there, key indicator of correct DEG analysis
DEGs[gene_name=="XIST",c("celltype","adj_pval","lfc")]
#Present in all cell types
# There should also be high number of other DEGs on sex chromosomes, check:
our_degs[chromosome_name \%in\% c("X","Y"),
         .N,by=.(celltype,chromosome_name)]
}

# Simple runnable example with bundled data
micro_tsai <- system.file("extdata", "Tsai_Micro.qs", package="poweranalysis")
SCE_tsai <- qs::qread(micro_tsai)
DGE_tsai <- poweranalysis::DGE_analysis(
    SCE_tsai,
    design = ~ sex,
    celltypeID = "cluster_celltype",
    sampleID = "sample_id",
    output_path = tempdir(),
    coef = "M"
)
DGE_tsai
}
